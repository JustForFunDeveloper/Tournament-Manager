<mah:MetroWindow
    x:Class="HandicapBewerb.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="clr-namespace:HandicapBewerb.ViewModels.Common"
    xmlns:viewModels1="clr-namespace:HandicapBewerb.ViewModels"
    xmlns:views1="clr-namespace:HandicapBewerb.Views"
    xmlns:handicapBewerb="clr-namespace:HandicapBewerb"
    x:Name="mainWindow"
    Title="Handicap Statistik"
    Width="1200"
    Height="700"
    BorderThickness="0"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    WindowTransitionsEnabled="False"
    mc:Ignorable="d">

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding OpenMenu}" Content="Menu" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding LogIn}" Content="{Binding LoginText}"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Window.DataContext>
        <viewModels1:MainViewModel />
    </Window.DataContext>

    <Grid x:Name="RootGrid">
        <Grid.Resources>

            <common:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />

            <!--  this is the template for the items (options)  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid
                    x:Name="RootGrid"
                    Height="48"
                    Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  these are the templates for the view models  -->
            <DataTemplate DataType="{x:Type viewModels1:HomeViewModel}">
                <views1:HomeView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels1:AboutViewModel}">
                <views1:AboutView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels1:AddPlayerViewModel}">
                <views1:AddPlayerView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels1:UserDataModel}">
                <views1:UserDataView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels1:MatchDataModel}">
                <views1:MatchDataView DataContext="{Binding}" />
            </DataTemplate>
        </Grid.Resources>

        <mah:HamburgerMenu
            x:Name="HamburgerMenuControl"
            Grid.Row="0"
            DisplayMode="Overlay"
            HamburgerVisibility="Hidden"
            IsPaneOpen="{Binding IsPaneOpened}"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            ItemsSource="{Binding MenuItems}"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemsSource="{Binding MenuOptionItems}"
            PaneBackground="{StaticResource MahApps.Brushes.Gray8}"
            PaneHeaderMargin="0,-60,0,8"
            SelectedIndex="{Binding SelectedIndex}"
            Style="{StaticResource MahApps.Styles.HamburgerMenu.CreatorsUpdate}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ItemClick">
                    <i:InvokeCommandAction Command="{Binding ItemClick}" CommandParameter="{Binding ElementName=HamburgerMenuControl, Path=SelectedIndex}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="OptionsItemClick">
                    <i:InvokeCommandAction Command="{Binding OptionItemClick}" CommandParameter="{Binding ElementName=HamburgerMenuControl, Path=SelectedOptionsIndex}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <mah:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding
                        FallbackValue="{x:Null}"
                        Mode="OneWay"
                        Path="SelectedItem.Tag"
                        RelativeSource="{RelativeSource Self}" />
                    <Binding
                        FallbackValue="{x:Null}"
                        Mode="OneWay"
                        Path="SelectedOptionsItem.Tag"
                        RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </mah:HamburgerMenu.Content>

        </mah:HamburgerMenu>

    </Grid>
</mah:MetroWindow>