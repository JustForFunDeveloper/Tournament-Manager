<UserControl x:Class="TournamentManager.Views.PlayerStatisticView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:viewModels="clr-namespace:TournamentManager.ViewModels"
             d:DataContext="{d:DesignInstance viewModels:PlayerStatisticModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <system:Double x:Key="IconSize">25</system:Double>
        <Style
            x:Key="IconStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
            TargetType="Button">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,20,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <ContentPresenter
                                x:Name="MyContentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="CloseIcon"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ZoomIn"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ZoomOut"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ShiftLeft"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ShiftRight"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowForward, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowForward, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowForward, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,10,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0"
                    HorizontalAlignment="Center">
            <TextBlock Text="{Binding UserText}"
                       FontSize="25"
                       Margin="0,0,0,10"/>
        </StackPanel>
        <StackPanel Grid.Row="0"
                    HorizontalAlignment="Left"
                    Margin="5,0,0,5"
                    Orientation="Horizontal">
            <Button
                Style="{DynamicResource CloseIcon}"
                ToolTip="Zurück" 
                Cursor="Hand"
                Margin="10,0,0,0"
                Command="{Binding OnClose}"/>
        </StackPanel>
        <Grid Grid.Row="1"
              HorizontalAlignment="Center"
              Margin="5,0,15,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                Style="{DynamicResource ShiftLeft}"
                ToolTip="Daten links anzeigen!" 
                Cursor="Hand"
                Command="{Binding OnShiftLeft}"/>
            <Button Grid.Column="1"
                Style="{DynamicResource ZoomIn}"
                ToolTip="Zoom hinein!" 
                Cursor="Hand"
                Command="{Binding OnZoomIn}"/>
            <Button Grid.Column="2"
                Style="{DynamicResource ZoomOut}"
                ToolTip="Zoom hinaus!" 
                Cursor="Hand"
                Command="{Binding OnZoomOut}"/>
            <Button Grid.Column="3"
                Style="{DynamicResource ShiftRight}"
                ToolTip="Daten rechts anzeigen!" 
                Cursor="Hand"
                Command="{Binding OnShiftRight}"/>
        </Grid>
        <lvc:CartesianChart Grid.Row="2"
                            Margin="5"
                            Series="{Binding SeriesCollection}" 
                            LegendLocation="Right"
                            FontSize="15">
            <lvc:CartesianChart.AxisY>
                <lvc:Axis Title="Punkte" 
                          LabelFormatter="{Binding YFormatter}"
                          FontSize="15"/>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="Datum" 
                          Labels="{Binding Labels}"
                          FontSize="15"/>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
    </Grid>
</UserControl>
