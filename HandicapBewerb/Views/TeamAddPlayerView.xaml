<UserControl x:Class="TournamentManager.Views.TeamAddPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:model="clr-namespace:TournamentManager.ViewModels"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             d:DataContext="{d:DesignInstance model:TeamAddPlayerViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="700"
             d:DesignWidth="1200">
    <UserControl.Resources>
        <system:Double x:Key="IconSize">25</system:Double>
        <Style
            x:Key="IconStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
            TargetType="Button">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,20,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <ContentPresenter
                                x:Name="MyContentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="CloseIcon"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=ArrowBack, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="SaveTeam"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Save, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Save, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Save, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="DiscardTeam"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="AddUser"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="DeleteUser"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="AddTeam"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Add, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="DeleteTeam"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Remove, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ResetTeam"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:MaterialDesign Kind=Close, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,10,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,0,0,5"
                    Orientation="Horizontal">
            <Button
                Style="{DynamicResource CloseIcon}"
                ToolTip="Zurück" 
                Cursor="Hand"
                Command="{Binding OnClose}"/>
            <Button 
                Style="{DynamicResource SaveTeam}"
                ToolTip="Team speichern!" 
                Cursor="Hand"
                Command="{Binding OnSaveTeam}"
                Margin="10,0,0,0"
                Visibility="{Binding EditingVisibility}"/>
            <Button 
                Style="{DynamicResource DiscardTeam}"
                ToolTip="Team nicht speichern!" 
                Cursor="Hand"
                Command="{Binding OnDiscardTeam}"
                Margin="10,0,20,0"
                Visibility="{Binding EditingVisibility}"/>
            <Button
                Style="{DynamicResource AddUser}"
                ToolTip="Neuen Spieler hinzufügen!"
                Cursor="Hand"
                Command="{Binding OnAddUser}"
                Margin="20,0,0,0"/>
            <Button
                Style="{DynamicResource DeleteUser}"
                ToolTip="Markierte Spieler entfernen!"
                Cursor="Hand"
                Command="{Binding OnDeleteUser}"
                Margin="10,0,0,0"/>
        </StackPanel>
        <StackPanel Grid.Row="0" 
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,0,0,5"
                    Orientation="Horizontal">
            <Button
                Style="{DynamicResource AddTeam}"
                ToolTip="Fügt ein neues Team hinzu!"
                Cursor="Hand"
                Command="{Binding OnAddTeam}"
                Margin="0,0,0,0"/>
            <Button
                Style="{DynamicResource DeleteTeam}"
                ToolTip="Entfernt das letzte Team!"
                Cursor="Hand"
                Command="{Binding OnDeleteTeam}"
                Margin="10,0,0,0"/>
            <Button 
                Style="{DynamicResource ResetTeam}"
                ToolTip="Teams zurücksetzen!" 
                Cursor="Hand"
                Command="{Binding OnResetTeam}"
                Margin="10,0,20,0"/>
        </StackPanel>
        <Rectangle
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Height="1"
            VerticalAlignment="Top"
            Margin="5,0,5,0"
            Fill="Black" />
        <TextBlock Grid.Row="1" 
                   Grid.Column="0" 
                   Text="Wähle die Spieler aus!"
                   Margin="5"/>
        <TextBlock Grid.Row="1" 
                   Grid.Column="1" 
                   Text="Erstelle oder lösche Teams!"
                   Margin="5"/>
        <ListBox x:Name="UserListBox" 
                 Grid.Column="0" 
                 Grid.Row="2"
                 Margin="5"
                 BorderThickness="1"
                 dd:DragDrop.CanDragWithMouseRightButton="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.IsDropTarget="True"
                 dd:DragDrop.UseDefaultEffectDataTemplate="True"
                 ItemsSource="{Binding Users}"
                 SelectionChanged="Selector_OnSelectionChanged"
                 SelectionMode="Multiple"/>
        <UniformGrid Grid.Column="1" 
                     Grid.Row="2"
                     Margin="0,5,0,0"
                     Columns="{Binding TeamControls}">
            <ItemsControl ItemsSource="{Binding TeamControls}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding Height ,ElementName=TeamName}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox x:Name="TeamName"
                                     Grid.Row="0"
                                     HorizontalAlignment="Center"
                                     Width="100"
                                     TextAlignment="Center"
                                     Text="{Binding TeamName}"
                                     mah:TextBoxHelper.Watermark="Teamname"
                                     mah:TextBoxHelper.WatermarkAlignment="Center"/>
                            <ListBox Grid.Row="1"
                                     MinHeight="30"
                                     Margin="5,5,5,5"
                                     BorderThickness="1"
                                     dd:DragDrop.CanDragWithMouseRightButton="True"
                                     dd:DragDrop.DropTargetAdornerBrush="Coral"
                                     dd:DragDrop.IsDragSource="True"
                                     dd:DragDrop.IsDropTarget="True"
                                     dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                     SelectionMode="Multiple"
                                     ItemsSource="{Binding Players}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </UniformGrid>
    </Grid>
</UserControl>
